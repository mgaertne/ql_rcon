on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - run: cargo check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy
      - run: cargo clippy -- -D warnings

  build:
    name: build
    needs: [ check, clippy ]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - run: cargo build --release --verbose
      - name: Provide build artifacts
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_rcon_${{ matrix.os }}
          path: target/release/ql_zmq_rcon
      - name: Provide build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_rcon_${{ matrix.os }}.exe
          path: target/release/ql_zmq_rcon.exe
      - name: Provide build artifacts
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_stats_${{ matrix.os }}
          path: target/release/ql_zmq_stats
      - name: Provide build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_stats_${{ matrix.os }}.exe
          path: target/release/ql_zmq_stats.exe
